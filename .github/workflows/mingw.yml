name: Mingw

on:
  workflow_dispatch:
    inputs:
      tcltag:  # User input for selecting Tcl tag
        description: 'Tcl version'
        required: true
        type: choice
        options:
          - '["main"]'
          - '["core-8-6-13"]'
          - '["core-8-6-13", "main"]'
        default: '["core-8-6-13", "main"]'
      arch:
        description: 'mingw32 and/or mingw64'
        required: false
        type: choice
        options:
          - '["mingw64"]'
          - '["mingw32"]'
          - '["mingw64", "mingw32"]'
        default: '["mingw64"]'
      dotest: # Whether tests should be run
        description: 'Run tests as well'
        required: false
        default: true
        type: boolean

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        tclbranch: ${{ fromJSON(github.event.inputs.tcltag) }}
        arch: ${{ fromJSON(github.event.inputs.arch) }}

    defaults:
      run:
        shell: msys2 {0}

    steps:

    - name: Set up msys2
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.arch }}
        path-type: minimal
        release: true
        update: false
        cache: true
        install: make mingw-w64-x86_64-gcc mingw-w64-i686-gcc

    - name: Verify toolchain
      run: |
        gcc -v
        make -v

    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Setup Tcl
      id: tcl-setup-step
      uses: apnadkarni/tcl-setup@v1
      with:
        tcl-osver: 'windows-latest'
        tcl-branch: ${{ matrix.tclbranch }}
        tcl-toolchain: 'mingw64'
        tcl-arch: ${{ matrix.arch }}

    - name: Build extension
      id: tcl-build-step
      uses: apnadkarni/tcl-build-extension@v1
      with:
        tcl-dotest: ${{ matrix.dotest }}
        tcl-toolchain: 'mingw64'

